{
	"compiler": {
		"version": "0.8.9+commit.e5eed63a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_link",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkRequested",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "fee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "_currentConditionsResult",
						"type": "bytes"
					}
				],
				"name": "fulfillCurrentConditions",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "_locationFound",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_locationResult",
						"type": "bytes"
					}
				],
				"name": "fulfillLocation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "_locationFound",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_locationResult",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "_currentConditionsResult",
						"type": "bytes"
					}
				],
				"name": "fulfillLocationCurrentConditions",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOracleAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_specId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_locationKey",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_units",
						"type": "string"
					}
				],
				"name": "requestCurrentConditions",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "requestIdCurrentConditionsResult",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint24",
						"name": "precipitationPast12Hours",
						"type": "uint24"
					},
					{
						"internalType": "uint24",
						"name": "precipitationPast24Hours",
						"type": "uint24"
					},
					{
						"internalType": "uint24",
						"name": "precipitationPastHour",
						"type": "uint24"
					},
					{
						"internalType": "uint24",
						"name": "pressure",
						"type": "uint24"
					},
					{
						"internalType": "int16",
						"name": "temperature",
						"type": "int16"
					},
					{
						"internalType": "uint16",
						"name": "windDirectionDegrees",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "windSpeed",
						"type": "uint16"
					},
					{
						"internalType": "uint8",
						"name": "precipitationType",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "relativeHumidity",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "uvIndex",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "weatherIcon",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "requestIdLocationResult",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "locationKey",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "bytes2",
						"name": "countryCode",
						"type": "bytes2"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "requestIdRequestParams",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "locationKey",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "endpoint",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "lat",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "lon",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "units",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_specId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_lat",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_lon",
						"type": "string"
					}
				],
				"name": "requestLocation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_specId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_lat",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_lon",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_units",
						"type": "string"
					}
				],
				"name": "requestLocationCurrentConditions",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "setOracle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawLink",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "LinkPool.",
			"details": "Uses @chainlink/contracts 0.4.0.",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_link": "the LINK token address.",
						"_oracle": "the Operator.sol contract address."
					}
				},
				"fulfillCurrentConditions(bytes32,bytes)": {
					"params": {
						"_currentConditionsResult": "the current weather conditions (encoded as CurrentConditionsResult).",
						"_requestId": "the request ID for fulfillment."
					}
				},
				"fulfillLocation(bytes32,bool,bytes)": {
					"details": "Only when `_locationFound` is true, both `_locationFound` will contain meaningful data (as bytes). This function body is just an example of usage.",
					"params": {
						"_locationFound": "true if a location was found for the given coordinates, otherwise false.",
						"_locationResult": "the location information (encoded as LocationResult).",
						"_requestId": "the request ID for fulfillment."
					}
				},
				"fulfillLocationCurrentConditions(bytes32,bool,bytes,bytes)": {
					"details": "Only when `_locationFound` is true, both `_locationFound` and `_currentConditionsResult` will contain meaningful data (as bytes). This function body is just an example of usage.",
					"params": {
						"_currentConditionsResult": "the current weather conditions (encoded as CurrentConditionsResult).",
						"_locationFound": "true if a location was found for the given coordinates, otherwise false.",
						"_locationResult": "the location information (encoded as LocationResult).",
						"_requestId": "the request ID for fulfillment."
					}
				},
				"requestCurrentConditions(bytes32,uint256,string)": {
					"params": {
						"_locationKey": "the location ID.",
						"_specId": "the jobID.",
						"_units": "the measurement system (\"metric\" or \"imperial\")."
					}
				},
				"requestLocation(bytes32,string,string)": {
					"params": {
						"_lat": "the latitude (WGS84 standard, from -90 to 90).",
						"_lon": "the longitude (WGS84 standard, from -180 to 180).",
						"_specId": "the jobID."
					}
				},
				"requestLocationCurrentConditions(bytes32,string,string,string)": {
					"params": {
						"_lat": "the latitude (WGS84 standard, from -90 to 90).",
						"_lon": "the longitude (WGS84 standard, from -180 to 180).",
						"_specId": "the jobID.",
						"_units": "the measurement system (\"metric\" or \"imperial\")."
					}
				}
			},
			"title": "A consumer contract for AccuWeather EA 'location-current-conditions' endpoint.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"fulfillCurrentConditions(bytes32,bytes)": {
					"notice": "Consumes the data returned by the node job on a particular request."
				},
				"fulfillLocation(bytes32,bool,bytes)": {
					"notice": "Consumes the data returned by the node job on a particular request."
				},
				"fulfillLocationCurrentConditions(bytes32,bool,bytes,bytes)": {
					"notice": "Consumes the data returned by the node job on a particular request."
				},
				"requestCurrentConditions(bytes32,uint256,string)": {
					"notice": "Returns the current weather conditions of a location by ID."
				},
				"requestLocation(bytes32,string,string)": {
					"notice": "Returns the location information for the given coordinates."
				},
				"requestLocationCurrentConditions(bytes32,string,string,string)": {
					"notice": "Returns the current weather conditions of a location for the given coordinates."
				}
			},
			"notice": "Request the current weather conditions for the given location coordinates (i.e. latitude an d longitude).",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"dynamic_nft/test_yongh/test.sol": "AccuweatherConsumer"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/Chainlink.sol": {
			"keccak256": "0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d",
				"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV"
			]
		},
		"@chainlink/contracts/src/v0.8/ChainlinkClient.sol": {
			"keccak256": "0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba0f668a6f55a546ac1fe7fbf8539878a62811c1b0606fb4fadafb62f661e853",
				"dweb:/ipfs/QmTUmXvjWQno67W4CUdkVyTRAwSKWrko8EPjtizzavNVLJ"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
			"keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
			"license": "MIT",
			"urls": [
				"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
				"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
			"keccak256": "0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0",
			"license": "MIT",
			"urls": [
				"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868",
				"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
			"keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
				"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
			"keccak256": "0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68",
			"license": "MIT",
			"urls": [
				"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab",
				"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
			"keccak256": "0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6",
				"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
			"keccak256": "0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d",
				"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
			"keccak256": "0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d",
			"license": "MIT",
			"urls": [
				"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056",
				"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
			"keccak256": "0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48",
			"license": "MIT",
			"urls": [
				"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3",
				"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
			"keccak256": "0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d",
			"license": "MIT",
			"urls": [
				"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b",
				"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa"
			]
		},
		"dynamic_nft/test_yongh/test.sol": {
			"keccak256": "0xc2855750a6330e383540322373b94e2a7dc24344091f966485ac800299de181e",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ac5e6b78ba5a93206b4e72f30d723da562546bc4581fff018018d66f8668541",
				"dweb:/ipfs/QmSZBQ7xdUn3thcYX94tQNn8gqYPokHP9UJRQ8Ajo9qZ6W"
			]
		}
	},
	"version": 1
}